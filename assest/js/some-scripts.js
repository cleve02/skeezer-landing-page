// Generated by CoffeeScript 1.6.2
/*
jQuery Waypoints - v2.0.3
Copyright (c) 2011-2013 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt
*/
(function () {
  var t =
      [].indexOf ||
      function (t) {
        for (var e = 0, n = this.length; e < n; e++) {
          if (e in this && this[e] === t) return e;
        }

        return -1;
      },
    e = [].slice;

  (function (t, e) {
    if (typeof define === "function" && define.amd) {
      return define("waypoints", ["jquery"], function (n) {
        return e(n, t);
      });
    } else {
      return e(t.jQuery, t);
    }
  })(this, function (n, r) {
    var i, o, l, s, f, u, a, c, h, d, p, y, v, w, g, m;
    i = n(r);
    c = t.call(r, "ontouchstart") >= 0;

    s = {
      horizontal: {},
      vertical: {},
    };

    f = 1;
    a = {};
    u = "waypoints-context-id";
    p = "resize.waypoints";
    y = "scroll.waypoints";
    v = 1;
    w = "waypoints-waypoint-ids";
    g = "waypoint";
    m = "waypoints";

    o = (function () {
      function t(t) {
        var e = this;
        this.$element = t;
        this.element = t[0];
        this.didResize = false;
        this.didScroll = false;
        this.id = "context" + f++;

        this.oldScroll = {
          x: t.scrollLeft(),
          y: t.scrollTop(),
        };

        this.waypoints = {
          horizontal: {},
          vertical: {},
        };

        t.data(u, this.id);
        a[this.id] = this;

        t.bind(y, function () {
          var t;

          if (!(e.didScroll || c)) {
            e.didScroll = true;

            t = function () {
              e.doScroll();
              return (e.didScroll = false);
            };

            return r.setTimeout(t, n[m].settings.scrollThrottle);
          }
        });

        t.bind(p, function () {
          var t;

          if (!e.didResize) {
            e.didResize = true;

            t = function () {
              n[m]("refresh");
              return (e.didResize = false);
            };

            return r.setTimeout(t, n[m].settings.resizeThrottle);
          }
        });
      }

      t.prototype.doScroll = function () {
        var t,
          e = this;

        t = {
          horizontal: {
            newScroll: this.$element.scrollLeft(),
            oldScroll: this.oldScroll.x,
            forward: "right",
            backward: "left",
          },

          vertical: {
            newScroll: this.$element.scrollTop(),
            oldScroll: this.oldScroll.y,
            forward: "down",
            backward: "up",
          },
        };

        if (c && (!t.vertical.oldScroll || !t.vertical.newScroll)) {
          n[m]("refresh");
        }

        n.each(t, function (t, r) {
          var i, o, l;
          l = [];
          o = r.newScroll > r.oldScroll;
          i = o ? r.forward : r.backward;

          n.each(e.waypoints[t], function (t, e) {
            var n, i;

            if (r.oldScroll < (n = e.offset) && n <= r.newScroll) {
              return l.push(e);
            } else if (r.newScroll < (i = e.offset) && i <= r.oldScroll) {
              return l.push(e);
            }
          });

          l.sort(function (t, e) {
            return t.offset - e.offset;
          });

          if (!o) {
            l.reverse();
          }

          return n.each(l, function (t, e) {
            if (e.options.continuous || t === l.length - 1) {
              return e.trigger([i]);
            }
          });
        });

        return (this.oldScroll = {
          x: t.horizontal.newScroll,
          y: t.vertical.newScroll,
        });
      };

      t.prototype.refresh = function () {
        var t,
          e,
          r,
          i = this;
        r = n.isWindow(this.element);
        e = this.$element.offset();
        this.doScroll();

        t = {
          horizontal: {
            contextOffset: r ? 0 : e.left,
            contextScroll: r ? 0 : this.oldScroll.x,
            contextDimension: this.$element.width(),
            oldScroll: this.oldScroll.x,
            forward: "right",
            backward: "left",
            offsetProp: "left",
          },

          vertical: {
            contextOffset: r ? 0 : e.top,
            contextScroll: r ? 0 : this.oldScroll.y,
            contextDimension: r
              ? n[m]("viewportHeight")
              : this.$element.height(),
            oldScroll: this.oldScroll.y,
            forward: "down",
            backward: "up",
            offsetProp: "top",
          },
        };

        return n.each(t, function (t, e) {
          return n.each(i.waypoints[t], function (t, r) {
            var i, o, l, s, f;
            i = r.options.offset;
            l = r.offset;
            o = n.isWindow(r.element) ? 0 : r.$element.offset()[e.offsetProp];

            if (n.isFunction(i)) {
              i = i.apply(r.element);
            } else if (typeof i === "string") {
              i = parseFloat(i);

              if (r.options.offset.indexOf("%") > -1) {
                i = Math.ceil((e.contextDimension * i) / 100);
              }
            }

            r.offset = o - e.contextOffset + e.contextScroll - i;

            if ((r.options.onlyOnScroll && l != null) || !r.enabled) {
              return;
            }

            if (l !== null && l < (s = e.oldScroll) && s <= r.offset) {
              return r.trigger([e.backward]);
            } else if (l !== null && l > (f = e.oldScroll) && f >= r.offset) {
              return r.trigger([e.forward]);
            } else if (l === null && e.oldScroll >= r.offset) {
              return r.trigger([e.forward]);
            }
          });
        });
      };

      t.prototype.checkEmpty = function () {
        if (
          n.isEmptyObject(this.waypoints.horizontal) &&
          n.isEmptyObject(this.waypoints.vertical)
        ) {
          this.$element.unbind([p, y].join(" "));
          return delete a[this.id];
        }
      };

      return t;
    })();

    l = (function () {
      function t(t, e, r) {
        var i, o;
        r = n.extend({}, n.fn[g].defaults, r);

        if (r.offset === "bottom-in-view") {
          r.offset = function () {
            var t;
            t = n[m]("viewportHeight");

            if (!n.isWindow(e.element)) {
              t = e.$element.height();
            }

            return t - n(this).outerHeight();
          };
        }

        this.$element = t;
        this.element = t[0];
        this.axis = r.horizontal ? "horizontal" : "vertical";
        this.callback = r.handler;
        this.context = e;
        this.enabled = r.enabled;
        this.id = "waypoints" + v++;
        this.offset = null;
        this.options = r;
        e.waypoints[this.axis][this.id] = this;
        s[this.axis][this.id] = this;
        i = (o = t.data(w)) != null ? o : [];
        i.push(this.id);
        t.data(w, i);
      }

      t.prototype.trigger = function (t) {
        if (!this.enabled) {
          return;
        }

        if (this.callback != null) {
          this.callback.apply(this.element, t);
        }

        if (this.options.triggerOnce) {
          return this.destroy();
        }
      };

      t.prototype.disable = function () {
        return (this.enabled = false);
      };

      t.prototype.enable = function () {
        this.context.refresh();
        return (this.enabled = true);
      };

      t.prototype.destroy = function () {
        delete s[this.axis][this.id];
        delete this.context.waypoints[this.axis][this.id];
        return this.context.checkEmpty();
      };

      t.getWaypointsByElement = function (t) {
        var e, r;
        r = n(t).data(w);

        if (!r) {
          return [];
        }

        e = n.extend({}, s.horizontal, s.vertical);

        return n.map(r, function (t) {
          return e[t];
        });
      };

      return t;
    })();

    d = {
      init: function (t, e) {
        var r;

        if (e == null) {
          e = {};
        }

        if ((r = e.handler) == null) {
          e.handler = t;
        }

        this.each(function () {
          var t, r, i, s;
          t = n(this);
          i = (s = e.context) != null ? s : n.fn[g].defaults.context;

          if (!n.isWindow(i)) {
            i = t.closest(i);
          }

          i = n(i);
          r = a[i.data(u)];

          if (!r) {
            r = new o(i);
          }

          return new l(t, r, e);
        });

        n[m]("refresh");
        return this;
      },

      disable: function () {
        return d._invoke(this, "disable");
      },

      enable: function () {
        return d._invoke(this, "enable");
      },

      destroy: function () {
        return d._invoke(this, "destroy");
      },

      prev: function (t, e) {
        return d._traverse.call(this, t, e, function (t, e, n) {
          if (e > 0) {
            return t.push(n[e - 1]);
          }
        });
      },

      next: function (t, e) {
        return d._traverse.call(this, t, e, function (t, e, n) {
          if (e < n.length - 1) {
            return t.push(n[e + 1]);
          }
        });
      },

      _traverse: function (t, e, i) {
        var o, l;

        if (t == null) {
          t = "vertical";
        }

        if (e == null) {
          e = r;
        }

        l = h.aggregate(e);
        o = [];

        this.each(function () {
          var e;
          e = n.inArray(this, l[t]);
          return i(o, e, l[t]);
        });

        return this.pushStack(o);
      },

      _invoke: function (t, e) {
        t.each(function () {
          var t;
          t = l.getWaypointsByElement(this);

          return n.each(t, function (t, n) {
            n[e]();
            return true;
          });
        });

        return this;
      },
    };

    n.fn[g] = function () {
      var t, r;
      (r = arguments[0]),
        (t = 2 <= arguments.length ? e.call(arguments, 1) : []);

      if (d[r]) {
        return d[r].apply(this, t);
      } else if (n.isFunction(r)) {
        return d.init.apply(this, arguments);
      } else if (n.isPlainObject(r)) {
        return d.init.apply(this, [null, r]);
      } else if (!r) {
        return n.error(
          "jQuery Waypoints needs a callback function or handler option."
        );
      } else {
        return n.error(
          "The " + r + " method does not exist in jQuery Waypoints."
        );
      }
    };

    n.fn[g].defaults = {
      context: r,
      continuous: true,
      enabled: true,
      horizontal: false,
      offset: 0,
      triggerOnce: false,
    };

    h = {
      refresh: function () {
        return n.each(a, function (t, e) {
          return e.refresh();
        });
      },

      viewportHeight: function () {
        var t;
        return (t = r.innerHeight) != null ? t : i.height();
      },

      aggregate: function (t) {
        var e, r, i;
        e = s;

        if (t) {
          e = (i = a[n(t).data(u)]) != null ? i.waypoints : void 0;
        }

        if (!e) {
          return [];
        }

        r = {
          horizontal: [],
          vertical: [],
        };

        n.each(r, function (t, i) {
          n.each(e[t], function (t, e) {
            return i.push(e);
          });

          i.sort(function (t, e) {
            return t.offset - e.offset;
          });

          r[t] = n.map(i, function (t) {
            return t.element;
          });

          return (r[t] = n.unique(r[t]));
        });

        return r;
      },

      above: function (t) {
        if (t == null) {
          t = r;
        }

        return h._filter(t, "vertical", function (t, e) {
          return e.offset <= t.oldScroll.y;
        });
      },

      below: function (t) {
        if (t == null) {
          t = r;
        }

        return h._filter(t, "vertical", function (t, e) {
          return e.offset > t.oldScroll.y;
        });
      },

      left: function (t) {
        if (t == null) {
          t = r;
        }

        return h._filter(t, "horizontal", function (t, e) {
          return e.offset <= t.oldScroll.x;
        });
      },

      right: function (t) {
        if (t == null) {
          t = r;
        }

        return h._filter(t, "horizontal", function (t, e) {
          return e.offset > t.oldScroll.x;
        });
      },

      enable: function () {
        return h._invoke("enable");
      },

      disable: function () {
        return h._invoke("disable");
      },

      destroy: function () {
        return h._invoke("destroy");
      },

      extendFn: function (t, e) {
        return (d[t] = e);
      },

      _invoke: function (t) {
        var e;
        e = n.extend({}, s.vertical, s.horizontal);

        return n.each(e, function (e, n) {
          n[t]();
          return true;
        });
      },

      _filter: function (t, e, r) {
        var i, o;
        i = a[n(t).data(u)];

        if (!i) {
          return [];
        }

        o = [];

        n.each(i.waypoints[e], function (t, e) {
          if (r(i, e)) {
            return o.push(e);
          }
        });

        o.sort(function (t, e) {
          return t.offset - e.offset;
        });

        return n.map(o, function (t) {
          return t.element;
        });
      },
    };

    n[m] = function () {
      var t, n;
      (n = arguments[0]),
        (t = 2 <= arguments.length ? e.call(arguments, 1) : []);

      if (h[n]) {
        return h[n].apply(null, t);
      } else {
        return h.aggregate.call(null, n);
      }
    };

    n[m].settings = {
      resizeThrottle: 100,
      scrollThrottle: 30,
    };

    return i.load(function () {
      return n[m]("refresh");
    });
  });
}.call(this));
/*!* jquery.counterup.js 1.0** Copyright 2013, Benjamin Intal http://gambit.ph @bfintal* Released under the GPL v2 License** Date: Nov 26, 2013*/ (function (
  e
) {
  "use strict";

  e.fn.counterUp = function (t) {
    var n = e.extend(
      {
        time: 400,
        delay: 10,
      },
      t
    );

    return this.each(function () {
      var t = e(this),
        r = n,
        i = function () {
          var e = [],
            n = r.time / r.delay,
            i = t.text(),
            s = /[0-9]+,[0-9]+/.test(i);
          i = i.replace(/,/g, "");
          var o = /^[0-9]+$/.test(i),
            u = /^[0-9]+\.[0-9]+$/.test(i),
            a = u ? (i.split(".")[1] || []).length : 0;

          for (var f = n; f >= 1; f--) {
            var l = parseInt((i / n) * f);
            u && (l = parseFloat((i / n) * f).toFixed(a));

            if (s)
              while (/(\d+)(\d{3})/.test(l.toString()))
                l = l.toString().replace(/(\d+)(\d{3})/, "$1,$2");

            e.unshift(l);
          }

          t.data("counterup-nums", e);
          t.text("0");

          var c = function () {
            t.text(t.data("counterup-nums").shift());

            if (t.data("counterup-nums").length)
              setTimeout(t.data("counterup-func"), r.delay);
            else {
              delete t.data("counterup-nums");
              t.data("counterup-nums", null);
              t.data("counterup-func", null);
            }
          };

          t.data("counterup-func", c);
          setTimeout(t.data("counterup-func"), r.delay);
        };

      t.waypoint(i, {
        offset: "100%",
        triggerOnce: !0,
      });
    });
  };
})(jQuery);
/*! WOW - v1.1.2 - 2015-08-19
 * Copyright (c) 2015 Matthieu Aussaguel; Licensed MIT */ (function () {
  var a,
    b,
    c,
    d,
    e,
    f = function (a, b) {
      return function () {
        return a.apply(b, arguments);
      };
    },
    g =
      [].indexOf ||
      function (a) {
        for (var b = 0, c = this.length; c > b; b++)
          if (b in this && this[b] === a) return b;

        return -1;
      };

  (b = (function () {
    function a() {}

    return (
      (a.prototype.extend = function (a, b) {
        var c, d;

        for (c in b) (d = b[c]), null == a[c] && (a[c] = d);

        return a;
      }),
      (a.prototype.isMobile = function (a) {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
          a
        );
      }),
      (a.prototype.createEvent = function (a, b, c, d) {
        var e;
        return (
          null == b && (b = !1),
          null == c && (c = !1),
          null == d && (d = null),
          null != document.createEvent
            ? ((e = document.createEvent("CustomEvent")),
              e.initCustomEvent(a, b, c, d))
            : null != document.createEventObject
            ? ((e = document.createEventObject()), (e.eventType = a))
            : (e.eventName = a),
          e
        );
      }),
      (a.prototype.emitEvent = function (a, b) {
        return null != a.dispatchEvent
          ? a.dispatchEvent(b)
          : b in (null != a)
          ? a[b]()
          : "on" + b in (null != a)
          ? a["on" + b]()
          : void 0;
      }),
      (a.prototype.addEvent = function (a, b, c) {
        return null != a.addEventListener
          ? a.addEventListener(b, c, !1)
          : null != a.attachEvent
          ? a.attachEvent("on" + b, c)
          : (a[b] = c);
      }),
      (a.prototype.removeEvent = function (a, b, c) {
        return null != a.removeEventListener
          ? a.removeEventListener(b, c, !1)
          : null != a.detachEvent
          ? a.detachEvent("on" + b, c)
          : delete a[b];
      }),
      (a.prototype.innerHeight = function () {
        return "innerHeight" in window
          ? window.innerHeight
          : document.documentElement.clientHeight;
      }),
      a
    );
  })()),
    (c =
      this.WeakMap ||
      this.MozWeakMap ||
      (c = (function () {
        function a() {
          (this.keys = []), (this.values = []);
        }

        return (
          (a.prototype.get = function (a) {
            var b, c, d, e, f;

            for (f = this.keys, b = d = 0, e = f.length; e > d; b = ++d)
              if (((c = f[b]), c === a)) return this.values[b];
          }),
          (a.prototype.set = function (a, b) {
            var c, d, e, f, g;

            for (g = this.keys, c = e = 0, f = g.length; f > e; c = ++e)
              if (((d = g[c]), d === a)) return void (this.values[c] = b);

            return this.keys.push(a), this.values.push(b);
          }),
          a
        );
      })())),
    (a =
      this.MutationObserver ||
      this.WebkitMutationObserver ||
      this.MozMutationObserver ||
      (a = (function () {
        function a() {
          "undefined" != typeof console &&
            null !== console &&
            console.warn("MutationObserver is not supported by your browser."),
            "undefined" != typeof console &&
              null !== console &&
              console.warn(
                "WOW.js cannot detect dom mutations, please call .sync() after loading new content."
              );
        }

        return (a.notSupported = !0), (a.prototype.observe = function () {}), a;
      })())),
    (d =
      this.getComputedStyle ||
      function (a) {
        return (
          (this.getPropertyValue = function (b) {
            var c;

            return (
              "float" === b && (b = "styleFloat"),
              e.test(b) &&
                b.replace(e, function (a, b) {
                  return b.toUpperCase();
                }),
              (null != (c = a.currentStyle) ? c[b] : void 0) || null
            );
          }),
          this
        );
      }),
    (e = /(\-([a-z]){1})/g),
    (this.WOW = (function () {
      function e(a) {
        null == a && (a = {}),
          (this.scrollCallback = f(this.scrollCallback, this)),
          (this.scrollHandler = f(this.scrollHandler, this)),
          (this.resetAnimation = f(this.resetAnimation, this)),
          (this.start = f(this.start, this)),
          (this.scrolled = !0),
          (this.config = this.util().extend(a, this.defaults)),
          null != a.scrollContainer &&
            (this.config.scrollContainer = document.querySelector(
              a.scrollContainer
            )),
          (this.animationNameCache = new c()),
          (this.wowEvent = this.util().createEvent(this.config.boxClass));
      }

      return (
        (e.prototype.defaults = {
          boxClass: "wow",
          animateClass: "animated",
          offset: 0,
          mobile: !0,
          live: !0,
          callback: null,
          scrollContainer: null,
        }),
        (e.prototype.init = function () {
          var a;
          return (
            (this.element = window.document.documentElement),
            "interactive" === (a = document.readyState) || "complete" === a
              ? this.start()
              : this.util().addEvent(document, "DOMContentLoaded", this.start),
            (this.finished = [])
          );
        }),
        (e.prototype.start = function () {
          var b, c, d, e;

          if (
            ((this.stopped = !1),
            (this.boxes = function () {
              var a, c, d, e;

              for (
                d = this.element.querySelectorAll("." + this.config.boxClass),
                  e = [],
                  a = 0,
                  c = d.length;
                c > a;
                a++
              )
                (b = d[a]), e.push(b);

              return e;
            }.call(this)),
            (this.all = function () {
              var a, c, d, e;

              for (d = this.boxes, e = [], a = 0, c = d.length; c > a; a++)
                (b = d[a]), e.push(b);

              return e;
            }.call(this)),
            this.boxes.length)
          )
            if (this.disabled()) this.resetStyle();
            else
              for (e = this.boxes, c = 0, d = e.length; d > c; c++)
                (b = e[c]), this.applyStyle(b, !0);

          return (
            this.disabled() ||
              (this.util().addEvent(
                this.config.scrollContainer || window,
                "scroll",
                this.scrollHandler
              ),
              this.util().addEvent(window, "resize", this.scrollHandler),
              (this.interval = setInterval(this.scrollCallback, 50))),
            this.config.live
              ? new a(
                  (function (a) {
                    return function (b) {
                      var c, d, e, f, g;

                      for (g = [], c = 0, d = b.length; d > c; c++)
                        (f = b[c]),
                          g.push(
                            function () {
                              var a, b, c, d;

                              for (
                                c = f.addedNodes || [],
                                  d = [],
                                  a = 0,
                                  b = c.length;
                                b > a;
                                a++
                              )
                                (e = c[a]), d.push(this.doSync(e));

                              return d;
                            }.call(a)
                          );

                      return g;
                    };
                  })(this)
                ).observe(document.body, {
                  childList: !0,
                  subtree: !0,
                })
              : void 0
          );
        }),
        (e.prototype.stop = function () {
          return (
            (this.stopped = !0),
            this.util().removeEvent(
              this.config.scrollContainer || window,
              "scroll",
              this.scrollHandler
            ),
            this.util().removeEvent(window, "resize", this.scrollHandler),
            null != this.interval ? clearInterval(this.interval) : void 0
          );
        }),
        (e.prototype.sync = function () {
          return a.notSupported ? this.doSync(this.element) : void 0;
        }),
        (e.prototype.doSync = function (a) {
          var b, c, d, e, f;

          if ((null == a && (a = this.element), 1 === a.nodeType)) {
            for (
              a = a.parentNode || a,
                e = a.querySelectorAll("." + this.config.boxClass),
                f = [],
                c = 0,
                d = e.length;
              d > c;
              c++
            )
              (b = e[c]),
                g.call(this.all, b) < 0
                  ? (this.boxes.push(b),
                    this.all.push(b),
                    this.stopped || this.disabled()
                      ? this.resetStyle()
                      : this.applyStyle(b, !0),
                    f.push((this.scrolled = !0)))
                  : f.push(void 0);

            return f;
          }
        }),
        (e.prototype.show = function (a) {
          return (
            this.applyStyle(a),
            (a.className = a.className + " " + this.config.animateClass),
            null != this.config.callback && this.config.callback(a),
            this.util().emitEvent(a, this.wowEvent),
            this.util().addEvent(a, "animationend", this.resetAnimation),
            this.util().addEvent(a, "oanimationend", this.resetAnimation),
            this.util().addEvent(a, "webkitAnimationEnd", this.resetAnimation),
            this.util().addEvent(a, "MSAnimationEnd", this.resetAnimation),
            a
          );
        }),
        (e.prototype.applyStyle = function (a, b) {
          var c, d, e;

          return (
            (d = a.getAttribute("data-wow-duration")),
            (c = a.getAttribute("data-wow-delay")),
            (e = a.getAttribute("data-wow-iteration")),
            this.animate(
              (function (f) {
                return function () {
                  return f.customStyle(a, b, d, c, e);
                };
              })(this)
            )
          );
        }),
        (e.prototype.animate = (function () {
          return "requestAnimationFrame" in window
            ? function (a) {
                return window.requestAnimationFrame(a);
              }
            : function (a) {
                return a();
              };
        })()),
        (e.prototype.resetStyle = function () {
          var a, b, c, d, e;

          for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++)
            (a = d[b]), e.push((a.style.visibility = "visible"));

          return e;
        }),
        (e.prototype.resetAnimation = function (a) {
          var b;
          return a.type.toLowerCase().indexOf("animationend") >= 0
            ? ((b = a.target || a.srcElement),
              (b.className = b.className
                .replace(this.config.animateClass, "")
                .trim()))
            : void 0;
        }),
        (e.prototype.customStyle = function (a, b, c, d, e) {
          return (
            b && this.cacheAnimationName(a),
            (a.style.visibility = b ? "hidden" : "visible"),
            c &&
              this.vendorSet(a.style, {
                animationDuration: c,
              }),
            d &&
              this.vendorSet(a.style, {
                animationDelay: d,
              }),
            e &&
              this.vendorSet(a.style, {
                animationIterationCount: e,
              }),
            this.vendorSet(a.style, {
              animationName: b ? "none" : this.cachedAnimationName(a),
            }),
            a
          );
        }),
        (e.prototype.vendors = ["moz", "webkit"]),
        (e.prototype.vendorSet = function (a, b) {
          var c, d, e, f;
          d = [];

          for (c in b)
            (e = b[c]),
              (a["" + c] = e),
              d.push(
                function () {
                  var b, d, g, h;

                  for (
                    g = this.vendors, h = [], b = 0, d = g.length;
                    d > b;
                    b++
                  )
                    (f = g[b]),
                      h.push(
                        (a["" + f + c.charAt(0).toUpperCase() + c.substr(1)] =
                          e)
                      );

                  return h;
                }.call(this)
              );

          return d;
        }),
        (e.prototype.vendorCSS = function (a, b) {
          var c, e, f, g, h, i;

          for (
            h = d(a),
              g = h.getPropertyCSSValue(b),
              f = this.vendors,
              c = 0,
              e = f.length;
            e > c;
            c++
          )
            (i = f[c]), (g = g || h.getPropertyCSSValue("-" + i + "-" + b));

          return g;
        }),
        (e.prototype.animationName = function (a) {
          var b;

          try {
            b = this.vendorCSS(a, "animation-name").cssText;
          } catch (c) {
            b = d(a).getPropertyValue("animation-name");
          }

          return "none" === b ? "" : b;
        }),
        (e.prototype.cacheAnimationName = function (a) {
          return this.animationNameCache.set(a, this.animationName(a));
        }),
        (e.prototype.cachedAnimationName = function (a) {
          return this.animationNameCache.get(a);
        }),
        (e.prototype.scrollHandler = function () {
          return (this.scrolled = !0);
        }),
        (e.prototype.scrollCallback = function () {
          var a;

          return !this.scrolled ||
            ((this.scrolled = !1),
            (this.boxes = function () {
              var b, c, d, e;

              for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++)
                (a = d[b]), a && (this.isVisible(a) ? this.show(a) : e.push(a));

              return e;
            }.call(this)),
            this.boxes.length || this.config.live)
            ? void 0
            : this.stop();
        }),
        (e.prototype.offsetTop = function (a) {
          for (var b; void 0 === a.offsetTop; ) a = a.parentNode;

          for (b = a.offsetTop; (a = a.offsetParent); ) b += a.offsetTop;

          return b;
        }),
        (e.prototype.isVisible = function (a) {
          var b, c, d, e, f;
          return (
            (c = a.getAttribute("data-wow-offset") || this.config.offset),
            (f =
              (this.config.scrollContainer &&
                this.config.scrollContainer.scrollTop) ||
              window.pageYOffset),
            (e =
              f +
              Math.min(this.element.clientHeight, this.util().innerHeight()) -
              c),
            (d = this.offsetTop(a)),
            (b = d + a.clientHeight),
            e >= d && b >= f
          );
        }),
        (e.prototype.util = function () {
          return null != this._util ? this._util : (this._util = new b());
        }),
        (e.prototype.disabled = function () {
          return (
            !this.config.mobile && this.util().isMobile(navigator.userAgent)
          );
        }),
        e
      );
    })());
}.call(this));
/**
 * Modules in this bundle
 * @license
 *
 * modal-video:
 *   license: appleple
 *   author: appleple
 *   homepage: http://developer.a-blogcms.jp
 *   version: 2.2.0
 *
 * es6-object-assign:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Rubén Norte <rubennorte@gmail.com>
 *   homepage: https://github.com/rubennorte/es6-object-assign
 *   version: 1.1.0
 *
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
!(function e(t, n, o) {
  function i(a, l) {
    if (!n[a]) {
      if (!t[a]) {
        var u = "function" == typeof require && require;

        if (!l && u) return u(a, !0);

        if (r) return r(a, !0);

        var s = new Error("Cannot find module '" + a + "'");
        throw ((s.code = "MODULE_NOT_FOUND"), s);
      }

      var d = (n[a] = {
        exports: {},
      });

      t[a][0].call(
        d.exports,
        function (e) {
          var n = t[a][1][e];
          return i(n || e);
        },
        d,
        d.exports,
        e,
        t,
        n,
        o
      );
    }

    return n[a].exports;
  }

  for (
    var r = "function" == typeof require && require, a = 0;
    a < o.length;
    a++
  )
    i(o[a]);

  return i;
})(
  {
    1: [
      function (e, t, n) {
        "use strict";

        function o(e, t) {
          if (void 0 === e || null === e)
            throw new TypeError("Cannot convert first argument to object");

          for (var n = Object(e), o = 1; o < arguments.length; o++) {
            var i = arguments[o];

            if (void 0 !== i && null !== i)
              for (
                var r = Object.keys(Object(i)), a = 0, l = r.length;
                a < l;
                a++
              ) {
                var u = r[a],
                  s = Object.getOwnPropertyDescriptor(i, u);
                void 0 !== s && s.enumerable && (n[u] = i[u]);
              }
          }

          return n;
        }

        function i() {
          Object.assign ||
            Object.defineProperty(Object, "assign", {
              enumerable: !1,
              configurable: !0,
              writable: !0,
              value: o,
            });
        }

        t.exports = {
          assign: o,
          polyfill: i,
        };
      },
      {},
    ],

    2: [
      function (e, t, n) {
        "use strict";

        var o = e("../index"),
          i = function (e) {
            e.fn.modalVideo = function (e) {
              return "strings" == typeof e || new o(this, e), this;
            };
          };

        if ("function" == typeof define && define.amd) define(["jquery"], i);
        else {
          var r = window.jQuery ? window.jQuery : window.$;
          void 0 !== r && i(r);
        }

        t.exports = i;
      },
      {
        "../index": 4,
      },
    ],

    3: [
      function (e, t, n) {
        "use strict";

        function o(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }

        Object.defineProperty(n, "__esModule", {
          value: !0,
        });

        var i = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var o = t[n];
                (o.enumerable = o.enumerable || !1),
                  (o.configurable = !0),
                  "value" in o && (o.writable = !0),
                  Object.defineProperty(e, o.key, o);
              }
            }

            return function (t, n, o) {
              return n && e(t.prototype, n), o && e(t, o), t;
            };
          })(),
          r = e("../lib/util"),
          a = e("es6-object-assign").assign,
          l = {
            channel: "youtube",

            youtube: {
              autoplay: 1,
              cc_load_policy: 1,
              color: null,
              controls: 1,
              disablekb: 0,
              enablejsapi: 0,
              end: null,
              fs: 1,
              h1: null,
              iv_load_policy: 1,
              list: null,
              listType: null,
              loop: 0,
              modestbranding: null,
              origin: null,
              playlist: null,
              playsinline: null,
              rel: 0,
              showinfo: 1,
              start: 0,
              wmode: "transparent",
              theme: "dark",
              nocookie: !1,
            },

            ratio: "16:9",

            vimeo: {
              api: !1,
              autopause: !0,
              autoplay: !0,
              byline: !0,
              callback: null,
              color: null,
              height: null,
              loop: !1,
              maxheight: null,
              maxwidth: null,
              player_id: null,
              portrait: !0,
              title: !0,
              width: null,
              xhtml: !1,
            },

            allowFullScreen: !0,
            animationSpeed: 300,

            classNames: {
              modalVideo: "modal-video",
              modalVideoClose: "modal-video-close",
              modalVideoBody: "modal-video-body",
              modalVideoInner: "modal-video-inner",
              modalVideoIframeWrap: "modal-video-movie-wrap",
              modalVideoCloseBtn: "modal-video-close-btn",
            },

            aria: {
              openMessage: "You just openned the modal video",
              dismissBtnMessage: "Close the modal by clicking here",
            },
          },
          u = (function () {
            function e(t, n) {
              var i = this;
              o(this, e);
              var u = a({}, l, n),
                s = "string" == typeof t ? document.querySelectorAll(t) : t,
                d = document.querySelector("body"),
                c = u.classNames,
                f = u.animationSpeed;

              [].forEach.call(s, function (e) {
                e.addEventListener("click", function () {
                  var t = e.dataset.videoId,
                    n = e.dataset.channel || u.channel,
                    o = (0, r.getUniqId)(),
                    a = i.getVideoUrl(u, n, t),
                    l = i.getHtml(u, a, o);
                  (0, r.append)(d, l);
                  var s = document.querySelector("#" + o),
                    m = s.querySelector(".js-modal-video-dismiss-btn");

                  s.focus(),
                    s.addEventListener("click", function () {
                      (0, r.addClass)(s, c.modalVideoClose),
                        setTimeout(function () {
                          (0, r.remove)(s), e.focus();
                        }, f);
                    }),
                    s.addEventListener("keydown", function (e) {
                      9 === e.which &&
                        (e.preventDefault(),
                        document.activeElement === s
                          ? m.focus()
                          : (s.setAttribute("aria-label", ""), s.focus()));
                    }),
                    m.addEventListener("click", function () {
                      (0, r.triggerEvent)(s, "click");
                    });
                });
              });
            }

            return (
              i(e, [
                {
                  key: "getPadding",

                  value: function (e) {
                    var t = e.split(":"),
                      n = Number(t[0]);
                    return (100 * Number(t[1])) / n + "%";
                  },
                },
                {
                  key: "getQueryString",

                  value: function (e) {
                    var t = "";

                    return (
                      Object.keys(e).forEach(function (n) {
                        t += n + "=" + e[n] + "&";
                      }),
                      t.substr(0, t.length - 1)
                    );
                  },
                },
                {
                  key: "getVideoUrl",

                  value: function (e, t, n) {
                    return "youtube" === t
                      ? this.getYoutubeUrl(e.youtube, n)
                      : "vimeo" === t
                      ? this.getVimeoUrl(e.vimeo, n)
                      : "";
                  },
                },
                {
                  key: "getVimeoUrl",

                  value: function (e, t) {
                    return (
                      "//player.vimeo.com/video/" +
                      t +
                      "?" +
                      this.getQueryString(e)
                    );
                  },
                },
                {
                  key: "getYoutubeUrl",

                  value: function (e, t) {
                    var n = this.getQueryString(e);
                    return !0 === e.nocookie
                      ? "//www.youtube-nocookie.com/embed/" + t + "?" + n
                      : "//www.youtube.com/embed/" + t + "?" + n;
                  },
                },
                {
                  key: "getHtml",

                  value: function (e, t, n) {
                    var o = this.getPadding(e.ratio),
                      i = e.classNames;
                    return (
                      '\n      <div class="' +
                      i.modalVideo +
                      '" tabindex="-1" role="dialog" aria-label="' +
                      e.aria.openMessage +
                      '" id="' +
                      n +
                      '">\n        <div class="' +
                      i.modalVideoBody +
                      '">\n          <div class="' +
                      i.modalVideoInner +
                      '">\n            <div class="' +
                      i.modalVideoIframeWrap +
                      '" style="padding-bottom:' +
                      o +
                      '">\n              <button class="' +
                      i.modalVideoCloseBtn +
                      ' js-modal-video-dismiss-btn" aria-label="' +
                      e.aria.dismissBtnMessage +
                      "\"></button>\n              <iframe width='460' height='230' src=\"" +
                      t +
                      "\" frameborder='0' allowfullscreen=" +
                      e.allowFullScreen +
                      ' tabindex="-1"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    '
                    );
                  },
                },
              ]),
              e
            );
          })();

        (n.default = u), (t.exports = n.default);
      },
      {
        "../lib/util": 5,
        "es6-object-assign": 1,
      },
    ],

    4: [
      function (e, t, n) {
        "use strict";
        t.exports = e("./core/");
      },
      {
        "./core/": 3,
      },
    ],

    5: [
      function (e, t, n) {
        "use strict";

        Object.defineProperty(n, "__esModule", {
          value: !0,
        });

        (n.append = function (e, t) {
          var n = new DOMParser(),
            o = n.parseFromString(t, "text/html");
          e.appendChild(o.querySelector("body").childNodes[0]);
        }),
          (n.prepend = function (e, t) {
            var n = new DOMParser(),
              o = n.parseFromString(t, "text/html");
            e.insertBefore(o.querySelector("body").childNodes[0], e.firstChild);
          }),
          (n.getUniqId = function () {
            return (
              Date.now().toString(36) + Math.random().toString(36).substr(2, 5)
            ).toUpperCase();
          }),
          (n.remove = function (e) {
            e && e.parentNode && e.parentNode.removeChild(e);
          }),
          (n.addClass = function (e, t) {
            e.classList ? e.classList.add(t) : (e.className += " " + t);
          }),
          (n.triggerEvent = function (e, t, n) {
            var o = void 0;

            window.CustomEvent
              ? (o = new CustomEvent(t, {
                  cancelable: !0,
                }))
              : ((o = document.createEvent("CustomEvent")),
                o.initCustomEvent(t, !1, !1, n)),
              e.dispatchEvent(o);
          });
      },
      {},
    ],
  },
  {},
  [2]
);
!(function (a) {
  a.fn.stellarNav = function (n, i, s) {
    (nav = a(this)), (i = a(window).width());

    var e = a.extend(
      {
        theme: "plain",
        breakpoint: 768,
        phoneBtn: !1,
        locationBtn: !1,
        sticky: !1,
        position: "static",
        showArrows: !0,
        closeBtn: !1,
        scrollbarFix: !1,
      },
      n
    );

    return this.each(function () {
      function n() {
        var n = window.innerWidth;
        s >= n
          ? (d(),
            nav.addClass("mobile"),
            nav.removeClass("desktop"),
            !nav.hasClass("active") &&
              nav.find("ul:first").is(":visible") &&
              nav.find("ul:first").hide())
          : (nav.addClass("desktop"),
            nav.removeClass("mobile"),
            nav.hasClass("active") && nav.removeClass("active"),
            !nav.hasClass("active") &&
              nav.find("ul:first").is(":hidden") &&
              nav.find("ul:first").show(),
            a("li.open").removeClass("open").find("ul:visible").hide(),
            d(),
            v());
      }

      if (
        (("light" == e.theme || "dark" == e.theme) && nav.addClass(e.theme),
        e.breakpoint && (s = e.breakpoint),
        e.phoneBtn && e.locationBtn)
      )
        var t = "third";
      else if (e.phoneBtn || e.locationBtn) var t = "half";
      else var t = "full";

      if (
        (nav.prepend(
          '<a href="#" class="menu-toggle ' +
            t +
            '"><i class="fa fa-bars"></i> Menu</a>'
        ),
        e.phoneBtn && "right" != e.position && "left" != e.position)
      ) {
        var l =
          '<a href="tel:' +
          e.phoneBtn +
          '" class="call-btn-mobile ' +
          t +
          '"><i class="fa fa-phone"></i> <span>Call us</span></a>';
        nav.find("a.menu-toggle").after(l);
      }

      if (e.locationBtn && "right" != e.position && "left" != e.position) {
        var l =
          '<a href="' +
          e.locationBtn +
          '" class="location-btn-mobile ' +
          t +
          '" target="_blank"><i class="fa fa-map-marker"></i> <span>Location</span></a>';
        nav.find("a.menu-toggle").after(l);
      }

      if (
        (e.sticky &&
          ((navPos = nav.offset().top),
          i >= s &&
            a(window).bind("scroll", function () {
              a(window).scrollTop() > navPos
                ? nav.addClass("fixed")
                : nav.removeClass("fixed");
            })),
        "top" == e.position && nav.addClass("top"),
        "left" == e.position || "right" == e.position)
      ) {
        var o =
            '<a href="#" class="close-menu ' +
            t +
            '"><i class="fa fa-close"></i> <span>Close</span></a>',
          f =
            '<a href="tel:' +
            e.phoneBtn +
            '" class="call-btn-mobile ' +
            t +
            '"><i class="fa fa-phone"></i></a>',
          r =
            '<a href="' +
            e.locationBtn +
            '" class="location-btn-mobile ' +
            t +
            '" target="_blank"><i class="fa fa-map-marker"></i></a>';
        nav.find("ul:first").prepend(o),
          e.locationBtn && nav.find("ul:first").prepend(r),
          e.phoneBtn && nav.find("ul:first").prepend(f);
      }

      "right" == e.position && nav.addClass("right"),
        "left" == e.position && nav.addClass("left"),
        e.showArrows || nav.addClass("hide-arrows"),
        e.closeBtn &&
          "right" != e.position &&
          "left" != e.position &&
          nav
            .find("ul:first")
            .append(
              '<li><a href="#" class="close-menu"><i class="fa fa-close"></i> Close Menu</a></li>'
            ),
        e.scrollbarFix && a("body").addClass("stellarnav-noscroll-x"),
        a(".menu-toggle").on("click", function (n) {
          n.preventDefault(),
            "left" == e.position || "right" == e.position
              ? (nav.find("ul:first").stop(!0, !0).fadeToggle(250),
                nav.toggleClass("active"),
                nav.hasClass("active") &&
                  nav.hasClass("mobile") &&
                  a(document).on("click", function (n) {
                    nav.hasClass("mobile") &&
                      (a(n.target).closest(nav).length ||
                        (nav.find("ul:first").stop(!0, !0).fadeOut(250),
                        nav.removeClass("active")));
                  }))
              : (nav.find("ul:first").stop(!0, !0).slideToggle(250),
                nav.toggleClass("active"));
        }),
        a(".close-menu").click(function () {
          nav.removeClass("active"),
            "left" == e.position || "right" == e.position
              ? nav.find("ul:first").stop(!0, !0).fadeToggle(250)
              : nav
                  .find("ul:first")
                  .stop(!0, !0)
                  .slideUp(250)
                  .toggleClass("active");
        }),
        nav.find("li a").each(function () {
          a(this).next().length > 0 &&
            a(this)
              .parent("li")
              .addClass("has-sub")
              .append(
                '<a class="dd-toggle" href="#"><i class="fa fa-plus"></i></a>'
              );
        }),
        nav.find("li .dd-toggle").on("click", function (n) {
          n.preventDefault(),
            a(this).parent("li").children("ul").stop(!0, !0).slideToggle(250),
            a(this).parent("li").toggleClass("open");
        });

      var d = function () {
          nav.find("li").unbind("mouseenter"),
            nav.find("li").unbind("mouseleave");
        },
        v = function () {
          nav.find("li").on("mouseenter", function () {
            a(this).addClass("hover"),
              a(this).children("ul").stop(!0, !0).slideDown(250);
          }),
            nav.find("li").on("mouseleave", function () {
              a(this).removeClass("hover"),
                a(this).children("ul").stop(!0, !0).slideUp(250);
            });
        };

      n(),
        a(window).on("resize", function () {
          n();
        });
    });
  };
})(jQuery);
/**
 * Placeholdem - Placeholder Caret Animation
 * v1.0.2 - MIT License
 * http://placeholdem.jackrugile.com - git://github.com/jackrugile/placeholdem.git
 * by Jack Rugile - @jackrugile
 */

function Placeholdem(e) {
  "use strict";

  !(function () {
    for (
      var e = 0, t = ["ms", "moz", "webkit", "o"], n = 0;
      n < t.length && !window.requestAnimationFrame;
      ++n
    )
      (window.requestAnimationFrame = window[t[n] + "RequestAnimationFrame"]),
        (window.cancelAnimationFrame =
          window[t[n] + "CancelAnimationFrame"] ||
          window[t[n] + "CancelRequestAnimationFrame"]);

    window.requestAnimationFrame ||
      (window.requestAnimationFrame = function (t) {
        var n = new Date().getTime(),
          a = Math.max(0, 16 - (n - e)),
          l = window.setTimeout(function () {
            t(n + a);
          }, a);

        return (e = n + a), l;
      }),
      window.cancelAnimationFrame ||
        (window.cancelAnimationFrame = function (e) {
          clearTimeout(e);
        });
  })();

  var t = {};

  return (
    (t.customElems = ["password"]),
    (t.defaultInputAttributeName = "data-defaultinputtype"),
    (t.init = function () {
      if (((t.elems = []), e && e.length))
        for (var n = 0; n < e.length; n++)
          t.hasPlaceholder(e[n]) && t.elems.push(new t.PlaceholdemElem(e[n]));
      else e && t.hasPlaceholder(e) && t.elems.push(new t.PlaceholdemElem(e));
    }),
    (t.hasPlaceholder = function (e) {
      return (
        "function" == typeof e.hasAttribute && e.hasAttribute("placeholder")
      );
    }),
    (t.PlaceholdemElem = function (e) {
      var n = this;

      (n.init = function () {
        (n.elem = e),
          (n.form = e.form),
          (n.placeholder = n.elem.getAttribute("placeholder")),
          n.elem.removeAttribute("placeholder"),
          (n.rAF = null),
          (n.animating = 0),
          (n.defaultInputType = n.elem.getAttribute("type")),
          n.resetDefaultType(),
          n.elem.value || (n.elem.value = n.placeholder),
          n.on(n.elem, "focus", n.onFocus),
          n.on(n.elem, "blur", n.onBlur),
          n.on(n.elem, "keydown", n.onKeydown),
          n.form && n.on(n.form, "reset", n.onReset);
      }),
        (n.on = function (e, t, n) {
          e.addEventListener
            ? e.addEventListener(t, n)
            : e.attachEvent("on" + t, n);
        }),
        (n.onFocus = function () {
          (n.animating || n.elem.value === n.placeholder) &&
            ((n.animating = 1),
            window.cancelAnimationFrame(n.rAF),
            n.deletePlaceholder(),
            n.restoreDefaultType());
        }),
        (n.onBlur = function () {
          (n.animating || "" === n.elem.value) &&
            ((n.animating = 1),
            window.cancelAnimationFrame(n.rAF),
            n.restorePlaceholder(),
            n.resetDefaultType());
        }),
        (n.onKeydown = function () {
          n.animating &&
            ((n.animating = 0),
            window.cancelAnimationFrame(n.rAF),
            (n.elem.value = ""));
        }),
        (n.onReset = function () {
          setTimeout(function () {
            n.onBlur();
          });
        }),
        (n.deletePlaceholder = function () {
          n.elem.value.length > 0
            ? ((n.elem.value = n.elem.value.slice(0, -1)),
              (n.rAF = window.requestAnimationFrame(n.deletePlaceholder)))
            : (n.animating = 0);
        }),
        (n.restorePlaceholder = function () {
          n.elem.value.length < n.placeholder.length
            ? ((n.elem.value += n.placeholder[n.elem.value.length]),
              (n.rAF = window.requestAnimationFrame(n.restorePlaceholder)))
            : (n.animating = 0);
        }),
        (n.restoreDefaultType = function () {
          var e = n.elem.getAttribute(t.defaultInputAttributeName);
          e &&
            -1 != t.customElems.indexOf(e) &&
            e != n.elem.getAttribute("type") &&
            n.elem.setAttribute("type", e);
        }),
        (n.resetDefaultType = function () {
          -1 != t.customElems.indexOf(n.defaultInputType) &&
            (n.elem.setAttribute(
              t.defaultInputAttributeName,
              n.defaultInputType
            ),
            n.elem.setAttribute("type", "text"));
        }),
        n.init();
    }),
    t.init(),
    t
  );
}
/*
--------------------------------
Ajax Contact Form
--------------------------------
+ https://github.com/mehedidb/Ajax_Contact_Form
+ A Simple Ajax Contact Form developed in PHP with HTML5 Form validation.
+ Has a fallback in jQuery for browsers that do not support HTML5 form validation.
+ version 1.0.1
+ Copyright 2016 Mehedi Hasan Nahid
+ Licensed under the MIT license
+ https://github.com/mehedidb/Ajax_Contact_Form
*/

(function ($, window, document, undefined) {
  "use strict";
  var $form = $("#contact-form");

  $form.submit(function (e) {
    // remove the error class
    $(".form-group").removeClass("has-error");

    $(".help-block").remove();

    // get the form data
    var formData = {
      name: $('input[name="form-name"]').val(),
      email: $('input[name="form-email"]').val(),
      phone: $('input[name="form-phone"]').val(),
      message: $('textarea[name="form-message"]').val(),
    };

    // process the form
    $.ajax({
      type: "POST",
      url: "process.php",
      data: formData,
      dataType: "json",
      encode: true,
    })
      .done(function (data) {
        // handle errors
        if (!data.success) {
          if (data.errors.name) {
            $("#name-field").addClass("has-error");
            $("#name-field")
              .find(".form-input")
              .append(
                '<span class="help-block">' + data.errors.name + "</span>"
              );
          }

          if (data.errors.email) {
            $("#email-field").addClass("has-error");
            $("#email-field")
              .find(".form-input")
              .append(
                '<span class="help-block">' + data.errors.email + "</span>"
              );
          }

          if (data.errors.phone) {
            $("#phone-field").addClass("has-error");
            $("#phone-field")
              .find(".form-input")
              .append(
                '<span class="help-block">' + data.errors.phone + "</span>"
              );
          }

          if (data.errors.message) {
            $("#message-field").addClass("has-error");
            $("#message-field")
              .find(".form-input")
              .append(
                '<span class="help-block">' + data.errors.message + "</span>"
              );
          }
        } else {
          // display success message
          $form.html(
            '<div class="alert alert-success">' + data.message + "</div>"
          );
        }
      })
      .fail(function (data) {
        // for debug
        console.log(data);
      });

    e.preventDefault();
  });
})(jQuery, window, document);
/*!
Mailchimp Ajax Submit
jQuery Plugin
Author: Siddharth Doshi

Use:
===
$('#form_id').ajaxchimp(options);

- Form should have one <input> element with attribute 'type=email'
- Form should have one label element with attribute 'for=email_input_id' (used to display error/success message)
- All options are optional.

Options:
=======
options = {
    language: 'en',
    callback: callbackFunction,
    url: 'http://blahblah.us1.list-manage.com/subscribe/post?u=5afsdhfuhdsiufdba6f8802&id=4djhfdsh99f'
}

Notes:
=====
To get the mailchimp JSONP url (undocumented), change 'post?' to 'post-json?' and add '&c=?' to the end.
For e.g. 'http://blahblah.us1.list-manage.com/subscribe/post-json?u=5afsdhfuhdsiufdba6f8802&id=4djhfdsh99f&c=?',
*/

(function ($) {
  "use strict";

  $.ajaxChimp = {
    responses: {
      "We have sent you a confirmation email": 0,
      "Please enter a value": 1,
      "An email address must contain a single @": 2,
      "The domain portion of the email address is invalid (the portion after the @: )": 3,
      "The username portion of the email address is invalid (the portion before the @: )": 4,
      "This email address looks fake or invalid. Please enter a real email address": 5,
    },

    translations: {
      en: null,
    },

    init: function (selector, options) {
      $(selector).ajaxChimp(options);
    },
  };

  $.fn.ajaxChimp = function (options) {
    $(this).each(function (i, elem) {
      var form = $(elem);
      var email = form.find("input[type=email]");
      var label = form.find("label[for=" + email.attr("id") + "]");

      var settings = $.extend(
        {
          url: form.attr("action"),
          language: "en",
        },
        options
      );

      var url = settings.url.replace("/post?", "/post-json?").concat("&c=?");
      form.attr("novalidate", "true");
      email.attr("name", "EMAIL");

      form.submit(function () {
        var msg;

        function successCallback(resp) {
          if (resp.result === "success") {
            msg = "We have sent you a confirmation email";
            label.removeClass("error").addClass("valid");
            email.removeClass("error").addClass("valid");
          } else {
            email.removeClass("valid").addClass("error");
            label.removeClass("valid").addClass("error");
            var index = -1;

            try {
              var parts = resp.msg.split(" - ", 2);

              if (parts[1] === undefined) {
                msg = resp.msg;
              } else {
                var i = parseInt(parts[0], 10);

                if (i.toString() === parts[0]) {
                  index = parts[0];
                  msg = parts[1];
                } else {
                  index = -1;
                  msg = resp.msg;
                }
              }
            } catch (e) {
              index = -1;
              msg = resp.msg;
            }
          }

          // Translate and display message
          if (
            settings.language !== "en" &&
            $.ajaxChimp.responses[msg] !== undefined &&
            $.ajaxChimp.translations &&
            $.ajaxChimp.translations[settings.language] &&
            $.ajaxChimp.translations[settings.language][
              $.ajaxChimp.responses[msg]
            ]
          ) {
            msg =
              $.ajaxChimp.translations[settings.language][
                $.ajaxChimp.responses[msg]
              ];
          }

          label.html(msg);
          label.show(2000);

          if (settings.callback) {
            settings.callback(resp);
          }
        }

        var data = {};
        var dataArray = form.serializeArray();

        $.each(dataArray, function (index, item) {
          data[item.name] = item.value;
        });

        $.ajax({
          url: url,
          data: data,
          success: successCallback,
          dataType: "jsonp",

          error: function (resp, text) {
            console.log("mailchimp ajax submit error: " + text);
          },
        });

        // Translate and display submit message
        var submitMsg = "Submitting...";

        if (
          settings.language !== "en" &&
          $.ajaxChimp.translations &&
          $.ajaxChimp.translations[settings.language] &&
          $.ajaxChimp.translations[settings.language]["submit"]
        ) {
          submitMsg = $.ajaxChimp.translations[settings.language]["submit"];
        }

        label.html(submitMsg).show(2000);
        return false;
      });
    });

    return this;
  };
})(jQuery);
// Sticky Plugin v1.0.4 for jQuery
// =============
// Author: Anthony Garand
// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)
// Improvements by Leonardo C. Daronco (daronco)
// Created: 02/14/2011
// Date: 07/20/2015
// Website: http://stickyjs.com/
// Description: Makes an element on the page stick on the screen as you scroll
//              It will only set the 'top' and 'position' of your element, you
//              might need to adjust the width in some cases.

(function (factory) {
  if (typeof define === "function" && define.amd) {
    // AMD. Register as an anonymous module.
    define(["jquery"], factory);
  } else if (typeof module === "object" && module.exports) {
    // Node/CommonJS
    module.exports = factory(require("jquery"));
  } else {
    // Browser globals
    factory(jQuery);
  }
})(function ($) {
  var slice = Array.prototype.slice; // save ref to original slice()
  var splice = Array.prototype.splice; // save ref to original slice()

  var defaults = {
      topSpacing: 0,
      bottomSpacing: 0,
      className: "is-sticky",
      wrapperClassName: "sticky-wrapper",
      center: false,
      getWidthFrom: "",

      // works only when .getWidthFrom is empty
      widthFromWrapper: true,

      responsiveWidth: false,
      zIndex: "auto",
    },
    $window = $(window),
    $document = $(document),
    sticked = [],
    windowHeight = $window.height(),
    scroller = function () {
      var scrollTop = $window.scrollTop(),
        documentHeight = $document.height(),
        dwh = documentHeight - windowHeight,
        extra = scrollTop > dwh ? dwh - scrollTop : 0;

      for (var i = 0, l = sticked.length; i < l; i++) {
        var s = sticked[i],
          elementTop = s.stickyWrapper.offset().top,
          etse = elementTop - s.topSpacing - extra;

        //update height in case of dynamic content
        s.stickyWrapper.css("height", s.stickyElement.outerHeight());

        if (scrollTop <= etse) {
          if (s.currentTop !== null) {
            s.stickyElement.css({
              width: "",
              position: "",
              top: "",
              "z-index": "",
            });

            s.stickyElement.parent().removeClass(s.className);
            s.stickyElement.trigger("sticky-end", [s]);
            s.currentTop = null;
          }
        } else {
          var newTop =
            documentHeight -
            s.stickyElement.outerHeight() -
            s.topSpacing -
            s.bottomSpacing -
            scrollTop -
            extra;

          if (newTop < 0) {
            newTop = newTop + s.topSpacing;
          } else {
            newTop = s.topSpacing;
          }

          if (s.currentTop !== newTop) {
            var newWidth;

            if (s.getWidthFrom) {
              newWidth = $(s.getWidthFrom).width() || null;
            } else if (s.widthFromWrapper) {
              newWidth = s.stickyWrapper.width();
            }

            if (newWidth == null) {
              newWidth = s.stickyElement.width();
            }

            s.stickyElement
              .css("width", newWidth)
              .css("position", "fixed")
              .css("top", newTop)
              .css("z-index", s.zIndex);
            s.stickyElement.parent().addClass(s.className);

            if (s.currentTop === null) {
              s.stickyElement.trigger("sticky-start", [s]);
            } else {
              // sticky is started but it have to be repositioned
              s.stickyElement.trigger("sticky-update", [s]);
            }

            if (
              (s.currentTop === s.topSpacing && s.currentTop > newTop) ||
              (s.currentTop === null && newTop < s.topSpacing)
            ) {
              // just reached bottom || just started to stick but bottom is already reached
              s.stickyElement.trigger("sticky-bottom-reached", [s]);
            } else if (
              s.currentTop !== null &&
              newTop === s.topSpacing &&
              s.currentTop < newTop
            ) {
              // sticky is started && sticked at topSpacing && overflowing from top just finished
              s.stickyElement.trigger("sticky-bottom-unreached", [s]);
            }

            s.currentTop = newTop;
          }

          // Check if sticky has reached end of container and stop sticking
          var stickyWrapperContainer = s.stickyWrapper.parent();

          var unstick =
            s.stickyElement.offset().top + s.stickyElement.outerHeight() >=
              stickyWrapperContainer.offset().top +
                stickyWrapperContainer.outerHeight() &&
            s.stickyElement.offset().top <= s.topSpacing;

          if (unstick) {
            s.stickyElement
              .css("position", "absolute")
              .css("top", "")
              .css("bottom", 0)
              .css("z-index", "");
          } else {
            s.stickyElement
              .css("position", "fixed")
              .css("top", newTop)
              .css("bottom", "")
              .css("z-index", s.zIndex);
          }
        }
      }
    },
    resizer = function () {
      windowHeight = $window.height();

      for (var i = 0, l = sticked.length; i < l; i++) {
        var s = sticked[i];
        var newWidth = null;

        if (s.getWidthFrom) {
          if (s.responsiveWidth) {
            newWidth = $(s.getWidthFrom).width();
          }
        } else if (s.widthFromWrapper) {
          newWidth = s.stickyWrapper.width();
        }

        if (newWidth != null) {
          s.stickyElement.css("width", newWidth);
        }
      }
    },
    methods = {
      init: function (options) {
        return this.each(function () {
          var o = $.extend({}, defaults, options);
          var stickyElement = $(this);
          var stickyId = stickyElement.attr("id");
          var wrapperId = stickyId
            ? stickyId + "-" + defaults.wrapperClassName
            : defaults.wrapperClassName;
          var wrapper = $("<div></div>")
            .attr("id", wrapperId)
            .addClass(o.wrapperClassName);

          stickyElement.wrapAll(function () {
            if ($(this).parent("#" + wrapperId).length == 0) {
              return wrapper;
            }
          });

          var stickyWrapper = stickyElement.parent();

          if (o.center) {
            stickyWrapper.css({
              width: stickyElement.outerWidth(),
              marginLeft: "auto",
              marginRight: "auto",
            });
          }

          if (stickyElement.css("float") === "right") {
            stickyElement
              .css({
                float: "none",
              })
              .parent()
              .css({
                float: "right",
              });
          }

          o.stickyElement = stickyElement;
          o.stickyWrapper = stickyWrapper;
          o.currentTop = null;
          sticked.push(o);
          methods.setWrapperHeight(this);
          methods.setupChangeListeners(this);
        });
      },

      setWrapperHeight: function (stickyElement) {
        var element = $(stickyElement);
        var stickyWrapper = element.parent();

        if (stickyWrapper) {
          stickyWrapper.css("height", element.outerHeight());
        }
      },

      setupChangeListeners: function (stickyElement) {
        if (window.MutationObserver) {
          var mutationObserver = new window.MutationObserver(function (
            mutations
          ) {
            if (
              mutations[0].addedNodes.length ||
              mutations[0].removedNodes.length
            ) {
              methods.setWrapperHeight(stickyElement);
            }
          });

          mutationObserver.observe(stickyElement, {
            subtree: true,
            childList: true,
          });
        } else {
          if (window.addEventListener) {
            stickyElement.addEventListener(
              "DOMNodeInserted",
              function () {
                methods.setWrapperHeight(stickyElement);
              },
              false
            );

            stickyElement.addEventListener(
              "DOMNodeRemoved",
              function () {
                methods.setWrapperHeight(stickyElement);
              },
              false
            );
          } else if (window.attachEvent) {
            stickyElement.attachEvent("onDOMNodeInserted", function () {
              methods.setWrapperHeight(stickyElement);
            });

            stickyElement.attachEvent("onDOMNodeRemoved", function () {
              methods.setWrapperHeight(stickyElement);
            });
          }
        }
      },

      update: scroller,

      unstick: function (options) {
        return this.each(function () {
          var that = this;
          var unstickyElement = $(that);
          var removeIdx = -1;
          var i = sticked.length;

          while (i-- > 0) {
            if (sticked[i].stickyElement.get(0) === that) {
              splice.call(sticked, i, 1);
              removeIdx = i;
            }
          }

          if (removeIdx !== -1) {
            unstickyElement.unwrap();

            unstickyElement.css({
              width: "",
              position: "",
              top: "",
              float: "",
              "z-index": "",
            });
          }
        });
      },
    };

  // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):
  if (window.addEventListener) {
    window.addEventListener("scroll", scroller, false);
    window.addEventListener("resize", resizer, false);
  } else if (window.attachEvent) {
    window.attachEvent("onscroll", scroller);
    window.attachEvent("onresize", resizer);
  }

  $.fn.sticky = function (method) {
    if (methods[method]) {
      return methods[method].apply(this, slice.call(arguments, 1));
    } else if (typeof method === "object" || !method) {
      return methods.init.apply(this, arguments);
    } else {
      $.error("Method " + method + " does not exist on jQuery.sticky");
    }
  };

  $.fn.unstick = function (method) {
    if (methods[method]) {
      return methods[method].apply(this, slice.call(arguments, 1));
    } else if (typeof method === "object" || !method) {
      return methods.unstick.apply(this, arguments);
    } else {
      $.error("Method " + method + " does not exist on jQuery.sticky");
    }
  };

  $(function () {
    setTimeout(scroller, 0);
  });
});
jQuery(document).on(
  "ready",
  (function ($) {
    "use strict";

    /*--------------------------
          STICKY MAINMENU
      ---------------------------*/
    $("#mainmenu-area").sticky({
      topSpacing: 0,
    });

    /*---------------------------
          SMOOTH SCROLL
      -----------------------------*/
    $('ul#nav li a[href^="#"], a.navbar-brand, a.scrolltotop').on(
      "click",
      function (event) {
        var id = $(this).attr("href");
        var offset = 60;
        var target = $(id).offset().top - offset;

        $("html, body").animate(
          {
            scrollTop: target,
          },
          1500,
          "easeInOutExpo"
        );

        event.preventDefault();
      }
    );

    /*----------------------------
          MOBILE & DROPDOWN MENU
      ------------------------------*/
    jQuery(".stellarnav").stellarNav({
      theme: "dark",
      breakpoint: 900,
    });

    /*----------------------------
          SCROLL TO TOP
      ------------------------------*/
    $(window).scroll(function () {
      var $totalHeight = $(window).scrollTop();
      var $scrollToTop = $(".scrolltotop");

      if ($totalHeight > 300) {
        $(".scrolltotop").fadeIn();
      } else {
        $(".scrolltotop").fadeOut();
      }

      if ($totalHeight + $(window).height() === $(document).height()) {
        $scrollToTop.css("bottom", "90px");
      } else {
        $scrollToTop.css("bottom", "20px");
      }
    });

    /*--------------------------
         PARALLAX BACKGROUND
      ----------------------------*/
    $(window).stellar({
      responsive: true,
      positionProperty: "position",
      horizontalScrolling: false,
    });

    /*---------------------------
          HOME SLIDER
      -----------------------------*/
    var $homeSlider = $(".welcome-slider-area");

    $homeSlider.owlCarousel({

      // mouseDrag: false,
      // touchDrag: false,
      // pullDrag: false,
      // freeDrag: false,

      merge: false,
      smartSpeed: 1000,
      loop: false,
      nav: false,

      navText: [
        '<i class="fa fa-angle-left"></i>',
        '<i class="fa fa-angle-right"></i>',
      ],

      autoplay: false,
      autoplayTimeout: 3000,
      margin: 0,

      /*animateIn: 'fadeIn',
            animateOut: 'fadeOut',*/
      responsiveClass: true,

      responsive: {
        0: {
          items: 1,
        },

        600: {
          items: 1,
        },

        1000: {
          items: 1,
        },

        1200: {
          items: 1,
        },
      },
    });

    /*------------------------------
          VIDEO POPUP
      --------------------------------*/
    var $videoModal = $(".video-area-popup");

    $videoModal.modalVideo({
      channel: "youtube",
    });

    /*---------------------------
          MICHIMP INTEGRATION
      -----------------------------*/
    // $("#mc-form").ajaxChimp({
    //   //Set Your Mailchamp URL
    //   url: "http://intimissibd.us14.list-manage.com/subscribe/post?u=a77a312486b6e42518623c58a&amp;id=4af1f9af4c",

    //   callback: function (resp) {
    //     if (resp.result === "success") {
    //       $(".subscriber-form input, .subscriber-form button").hide();
    //     }
    //   },
    // });

    /*---------------------------
          COURSE SLIDER
      -----------------------------*/
    var $courseCarousel = $(".course-list");

    $courseCarousel.owlCarousel({
      merge: true,
      smartSpeed: 1000,
      loop: true,
      nav: false,
      center: true,

      navText: [
        '<i class="fa fa-long-arrow-left"></i> Prev',
        'Next <i class="fa fa-long-arrow-right"></i>',
      ],

      autoplay: true,
      autoplayTimeout: 3000,
      margin: 30,
      responsiveClass: true,

      responsive: {
        0: {
          items: 1,
          margin: 0,
        },

        600: {
          items: 2,
        },

        1000: {
          items: 3,
        },

        1200: {
          items: 3,
        },

        1900: {
          items: 4,
        },
      },
    });

    /*---------------------------
          TESTMONIAL SLIDER
      -----------------------------*/
    var $testmonialCarousel = $(".testmonial-slider");

    $testmonialCarousel.owlCarousel({
      merge: true,
      smartSpeed: 1000,
      loop: true,
      nav: true,
      center: false,
      dots: false,

      navText: [
        '<i class="fa fa-angle-left"></i>',
        '<i class="fa fa-angle-right"></i>',
      ],

      autoplay: true,
      autoplayTimeout: 3000,
      margin: 20,
      responsiveClass: true,

      responsive: {
        0: {
          items: 1,
        },

        600: {
          items: 2,
        },

        1000: {
          items: 2,
        },

        1200: {
          items: 2,
        },
      },
    });

    /*---------------------------
          CLIENT SLIDER
      -----------------------------*/
    var $clientCarousel = $(".client-slider");

    $clientCarousel.owlCarousel({
      merge: true,
      smartSpeed: 1000,
      loop: true,
      nav: false,
      center: true,

      navText: [
        '<i class="fa fa-long-arrow-left"></i> Prev',
        'Next <i class="fa fa-long-arrow-right"></i>',
      ],

      autoplay: true,
      autoplayTimeout: 3000,
      margin: 30,
      responsiveClass: true,

      responsive: {
        0: {
          items: 1,
        },

        600: {
          items: 3,
        },

        1000: {
          items: 5,
        },

        1200: {
          items: 5,
        },

        1900: {
          items: 5,
        },
      },
    });

    /*--------------------------
          FACT COUNTERING
      ---------------------------*/
    $(".counter").counterUp({
      delay: 10,
      time: 1000,
    });

    /*--------------------------
          ACTIVE WOW JS
      ----------------------------*/
    new WOW().init();

    /*---------------------------
          PLACEHOLDER ANIMATION
      ----------------------------*/
    Placeholdem(document.querySelectorAll("[placeholder]"));
  })(jQuery)
);

jQuery(window).on("load", function () {
  "use strict";

  /*--------------------------
          PRE LOADER
      ----------------------------*/
  $(".preeloader").fadeOut(1000);
});
// When the window has finished loading create our google map below
// google.maps.event.addDomListener(window, "load", init);

// function init() {
//   // Basic options for a simple Google Map
//   // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions
//   var mapOptions = {
//     // How zoomed in you want the map to start at (always required)
//     zoom: 11,

//     scrollwheel: false,

//     // The latitude and longitude to center the map (always required)
//     // Replace latitude and longitude for your palce.
//     center: new google.maps.LatLng(40.67, -73.94),

//     styles: [
//       {
//         featureType: "all",
//         elementType: "labels.text.fill",

//         stylers: [
//           {
//             saturation: 36,
//           },
//           {
//             color: "#6A6A6A",
//           },
//           {
//             lightness: 40,
//           },
//         ],
//       },
//       {
//         featureType: "all",
//         elementType: "labels.text.stroke",

//         stylers: [
//           {
//             visibility: "on",
//           },
//           {
//             color: "#f7f7f7",
//           },
//           {
//             lightness: 16,
//           },
//         ],
//       },
//       {
//         featureType: "all",
//         elementType: "labels.icon",

//         stylers: [
//           {
//             visibility: "off",
//           },
//         ],
//       },
//       {
//         featureType: "administrative",
//         elementType: "geometry.fill",

//         stylers: [
//           {
//             color: "#000000",
//           },
//           {
//             lightness: 20,
//           },
//         ],
//       },
//       {
//         featureType: "administrative",
//         elementType: "geometry.stroke",

//         stylers: [
//           {
//             color: "#000000",
//           },
//           {
//             lightness: 17,
//           },
//           {
//             weight: 1.2,
//           },
//         ],
//       },
//       {
//         featureType: "landscape",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#f7f7f7",
//           },
//           {
//             lightness: 20,
//           },
//         ],
//       },
//       {
//         featureType: "poi",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#f0f0f0",
//           },
//           {
//             lightness: 21,
//           },
//         ],
//       },
//       {
//         featureType: "road.highway",
//         elementType: "geometry.fill",

//         stylers: [
//           {
//             color: "#ffffff",
//           },
//           {
//             lightness: 17,
//           },
//         ],
//       },
//       {
//         featureType: "road.highway",
//         elementType: "geometry.stroke",

//         stylers: [
//           {
//             color: "#ffffff",
//           },
//           {
//             lightness: 29,
//           },
//           {
//             weight: 0.2,
//           },
//         ],
//       },
//       {
//         featureType: "road.arterial",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#ffffff",
//           },
//           {
//             lightness: 18,
//           },
//         ],
//       },
//       {
//         featureType: "road.local",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#ffffff",
//           },
//           {
//             lightness: 16,
//           },
//         ],
//       },
//       {
//         featureType: "transit",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#F7F7F7",
//           },
//           {
//             lightness: 19,
//           },
//         ],
//       },
//       {
//         featureType: "water",
//         elementType: "geometry",

//         stylers: [
//           {
//             color: "#EDEDED",
//           },
//           {
//             lightness: 17,
//           },
//         ],
//       },
//     ],
//   };

//   // Get the HTML DOM element that will contain your map
//   // We are using a div with id="map" seen below in the <body>
//   var mapElement = document.getElementById("map");

//   // Create the Google Map using our element and options defined above
//   var map = new google.maps.Map(mapElement, mapOptions);

//   // Let's also add a marker while we're at it
//   var marker = new google.maps.Marker({
//     position: new google.maps.LatLng(40.67, -73.94),
//     map: map,
//     icon: "assest/img/map-marker.png",
//     title: "WEEDING DAY!",
//   });
// }
